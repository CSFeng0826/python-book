Python 運算符
====================================

在這章節中主要說明 Python 中運算符，舉個簡單的例子 ``4+5 = 9``。``+`` 稱為運算符。

Python語言支持以下類型的運算符:

- 算術運算符
- 比較（關係）運算符
- 賦值運算符
- 邏輯運算符
- 位元運算符
- 成員運算符
- 身份運算符
- 運算符優先級

算術運算符
-----------------------------------------

以下為 Python 中的算術運算符號：

- ``+``：將兩個對象相加
- ``-``：宣告負數或是一個數減去另一個數
- ``*``：兩個數相乘或是返回一個被重複若干次的字符串
- ``/``：x 除以 y
- ``%``：返回除法的餘數
- ``**``：返回 x 的 y 次方
- ``//``：取除法的商，向下取最接近的整數

以下為程式範例：

.. code-block:: python

    a = 10
    b = 21
    c = -5

    print(a + b)
    print(b - c)
    print(a * b)
    print(b / a)
    print(b % a)
    print(a ** 2)
    print(b // a)

以上的輸出結果如下：

.. code-block:: console

    31
    26
    210
    2.1
    1
    100
    2

比較運算符
-----------------------------------------

在 Python 中比較運算符回傳的是 ``boolean`` 數值，所有比較運算符返回 1 表示 True，返回 0 表示 False。

以下為 Python 中的比較運算符號：

- ``等於 ==``：比較對象是否相等
- ``不等於 !=``：比較兩個對象是否不相等
- ``大於 >``：返回 x 是否大於 y
- ``小於 <``：返回 x 是否小於 y
- ``大於等於 >=``：返回 x 是否大於等於 y
- ``小於等於 <=``：返回 x 是否小於等於 y

以下為程式範例：

.. code-block:: python
    
    a = 21
    b = 10
    c = 0

    print(a == b)
    print(a != c)
    print(a > b)
    print(b < c)
    print(a >= c)
    print(c <= b)

以上的輸出結果如下：

.. code-block:: console

    True
    True
    False
    True
    True

賦值運算符
-----------------------------------------

賦值運算符是將運算後的結果賦予變數的運算符號，有以下幾種賦值運算符：

- ``=``：賦值運算符，``c = a + b`` 將 ``a + b`` 的運算結果給予 ``c``
- ``+=``：加法賦值運算符，``c += a`` 等效於 ``c = c + a``
- ``-=``：減法賦值運算符，``c -= a`` 等效於 ``c = c - a``
- ``*=``：乘法賦值運算符，``c *= a`` 等效於 ``c = c * a``
- ``/=``：除法賦值運算符，``c /= a`` 等效於 ``c = c / a``
- ``%=``：取餘數賦值運算符，``c %= a`` 等效於 ``c = c % a``
- ``**=``：次方賦值運算符，``c **= a`` 等效於 ``c = c ** a``
- ``//=``：取整除賦值運算符，``c //= a`` 等效於 ``c = c // a``
- ``:=``：海象運算符，可在表達式內部為變量賦值。Python3.8版本新增運算符

以下為程式範例：

.. code-block:: python
    
    a = 21
    b = 10 
    c = 0 

    c = a + b 
    print (" 1 - c 的值為：", c) 

    c += a 
    print (" 2 - c 的值為：", c) 

    c *= a 
    print (" 3 - c 的值為：", c) 

    c /= a 
    print (" 4 - c 的值為：", c)

    c = 2 
    c %= a 
    print (" 5 - c 的值為：", c) 

    c **= a 
    print (" 6 - c 的值為：", c) 

    c //= a 
    print (" 7 - c 的值為：", c)

以上的輸出結果如下：

.. code-block:: console

    1 - c 的值為： 31
    2 - c 的值為： 52
    3 - c 的值為： 1092
    4 - c 的值為： 52.0
    5 - c 的值為： 2
    6 - c 的值為： 2097152
    7 - c 的值為： 99864

位元運算符
-----------------------------------------

位元運算符是將數字看作二進制來進行計算的，有以下幾種位元運算符：

- ``&``：參與運算的兩個值,如果兩個相應位都為 ``1`` ，則該位的結果為 ``1``，否則為 ``0``
- ``|``：只要對應的二個二進位有一個為 ``1`` 時，結果便為 1
- ``^``：當兩對應的二進位相異時，結果為 ``1``
- ``~``：對數據的每個二進制位取反，即把 ``1`` 變為 ``0``，反之亦然
- ``<<``：運算數的各二進位全部往左移若干位，由 ``<<`` 右邊的數指定移動的位數，高位捨棄，低位補 ``0``
- ``>>``：把 ``>>`` 左邊的數的各二進位全部往右移若干位，``>>`` 右邊的數為移動的位數

以下為程式範例：

.. code-block:: python
    
    a = 60 # 60 = 0011 1100 
    b = 13 # 13 = 0000 1101 

    c = 0 

    c = a & b          # 12 = 0000 1100 
    print (" 1 - c 的值為：", c) 

    c = a | b          # 61 = 0011 1101 
    print (" 2 - c 的值為：", c) 

    c = a ^ b          # 49 = 0011 0001
    print (" 3 - c 的值為：", c) 

    c = ~ a            # -61 = 1100 0011 
    print (" 4 - c 的值為：", c) 

    c = a << 2         # 240 = 1111 0000 
    print (" 5 - c 的值為：", c) 

    c = a >> 2         # 15 = 0000 1111 
    print (" 6 - c 的值為：", c) 

以上的輸出結果如下：

.. code-block:: console

    1 - c 的值為： 12
    2 - c 的值為： 61
    3 - c 的值為： 49
    4 - c 的值為： -61
    5 - c 的值為： 240
    6 - c 的值為： 15

邏輯運算符
-----------------------------------------

Python 中有以下幾個邏輯運算符

- ``and``： ``x and y``，如果 ``x`` 為 ``False``，``x and y`` 返回 ``False``，否則它返回 ``y `` 的值
- ``or``：``x or y``，如果 ``x`` 是 ``True``，它返回 ``x`` 的值，否則它返回 ``y`` 的值
- ``not``：``not x``，如果 ``x`` 為 ``True``，返回 ``False`` 。如果 ``x`` 為 ``False``，它返回 ``True``

以下為程式範例：

.. code-block:: python
    
    a = True 
    b = False 

    print(a and b)  
    print(a or b)
    print(not b)  

以上的輸出結果如下：

.. code-block:: console

    False
    True
    True

成員運算符
-----------------------------------------

除了以上的一些運算符之外，Python還支持成員運算符，有以下兩個成員運算符：

- ``in``：如果在指定的序列中找到值返回 ``True``，否則返回 ``False``
- ``not in``：如果在指定的序列中沒有找到值返回 ``True``，否則返回 ``False``

以下為程式範例：

.. code-block:: python
    
    a = 10 
    b = 20 
    list1 = [10, 30, 40, 50]

    print(a in list1)
    print(b in list1)
    print(b not in list1)  

以上的輸出結果如下：

.. code-block:: console

    True
    False
    True

身份運算符
-----------------------------------------

身份運算符用於比較兩個對象是否來自同一個存儲單元，有以下兩個身份運算符：

- ``is``：``is`` 是判斷兩個識別字是不是引用自一個對象，類似 ``id(x) == id(y)``，如果引用的是同一個對象則返回 ``True``，否則返回 ``False``
- ``is not``：``is not`` 是判斷兩個識別字是不是引用自不同對象，類似 ``id(a) != id(b)``，如果引用的不是同一個對象則返回結果 ``True``，否則返回 ``False``

以下為程式範例：

.. code-block:: python
    
    a = [1 ,2, 3] 
    b = a
    print("b 為 a 賦值的識別字")
    print(b is a)
    print(b == a)
    print(b is not a)

    b = [1, 2, 3]
    print("b 為自己建立的串列")
    print(b is a)
    print(b == a)
    print(b is not a)  

以上的輸出結果如下：

.. code-block:: console

    b 為 a 賦值的識別字
    True
    True
    False
    b 為自己建立的串列
    False
    True
    True

運算符優先順序
-----------------------------------------

以下列出了從最高到最低優先順序的所有運算符：

- ``**``：指數(最高優先級)
- ``~、+、-``：按位翻轉, 一元加號和減號(最後兩個的方法名為+@ 和-@)
- ``*、/、%、//``：乘，除，求餘數和取整除
- ``+、-``：加法減法
- ``>>、<<``：右移，左移運算符
- ``&``：位元運算符 ``AND``
- ``^、|``：位元運算符
- ``<=、<、>、>=``：比較運算符
- ``==、!=``：等於運算符
- ``=、%=、/=、//=、-=、+=、*=、**=``：賦值運算符
- ``is、is not``：身份運算符
- ``in、not in``：成員運算符
- ``not、and、or``：邏輯運算符

注意： Pyhton3 已不支持 ``<>`` 運算符，可以使用 ``!=`` 代替