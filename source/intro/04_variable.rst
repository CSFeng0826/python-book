Python 變數類型
====================================

在 Python 中，允許使用者宣告*變數*（Variable)。變數為方便在程式中調用記憶體中的值而賦予的名字。

宣告變數
-----------------------------------------

在 Python 中宣告變數與其他程式語言不同，不需要宣告類型，每個變數在使用前都必須給予數值，給予數值後變數才會被創建，如以下程式範例。

.. code-block:: python

    str1 = "Hello World!"
    num1 = 10
    print(str1)
    print(num1)

宣告變數透過  ``等號 =`` 來給予值，在 ``等號 =`` 左邊為自定義的變數名稱，``等號 =`` 為欲賦予的值，當變數宣告完成後即可使用，執行以上程式碼會輸出下列結果：

.. code-block:: console

    Hello World!
    10

多個變數賦值
-----------------------------------------

Python 中可以同時為多個變數賦值，如以下程式範例：

.. code-block:: python

    num1 = num2 = num3 = 10

以上程式範例，創建了三個變數，數值都為 ``10``。

除此之外也可以為多個變數指定不同的數值，如以下程式範例：

.. code-block:: python

    num1, str1 = 10, "Hello World!"

以上程式範例，``10`` 被分配給變數 ``num1``，``"Hello World!"`` 被分配給 ``str1``。

數據類型
-----------------------------------------

Python 定義了一些標準的數據類型，用於儲存不同類型的數據，例如：名字可以用字串來儲存，身高可以用數字來儲存等等。

以下為 Python 的六個標準數據類型：

- Numbers (數字)
- String (字符串)
- List (串列)
- Tuple (元組)
- Dictionary (字典)
- Set (集合)

Numbers 數字
-----------------------------------------

Numbers (數字) 數據類型用於儲存數字，當指定一個值時，一個 Number 對象就會被創建：

.. code-block:: python

    num1 = 1
    num2 = 10

在 Python 中支持四種不同的數字類型：

- int (整數)
- long (長整數)
- float (浮點數)
- complex (複數)

以下表格為數值類型的範例：

+------+---------------------+----------+----------+
|int   |long                 |float     |complex   |
+======+=====================+==========+==========+
|10    |51924361L            |0.0       |3.14j     |
+------+---------------------+----------+----------+
|100   |-0x19323L            |15.20     |45.j      |
+------+---------------------+----------+----------+
|-786  |0122L                |-21.9     |9.322e-36j|
+------+---------------------+----------+----------+
|080   |0xDEFABCECBDAECBFBAEl|32.3e+18  |.876j     |
+------+---------------------+----------+----------+
|-0490 |535633629843L        |-90.      |-.6545+0J |
+------+---------------------+----------+----------+
|-0x260|-052318172735L       |-32.54e100|3e+26J    |
+------+---------------------+----------+----------+
|0x69  |-4721885298529L      |70.2E-12  |4.53e-7j  |
+------+---------------------+----------+----------+

- Python 使用 ``L`` 來表示長整數，也可以使用小寫 ``L``，但是還是建議使用大寫 ``L``，避免與數字 ``1`` 混淆。
- Python 支持複數，複數由實數部分和虛數部分構成，可以使用 ``a + bj``，或者 ``complex(a,b)`` 表示， 複數的 ``實數 a `` 和 ``虛數 b `` 都是浮點型

String 字串
-----------------------------------------

String (字串) 是由數字、英文字母以及符號組成的一串字符，是 Python 語言中表是文本的數據類型，如以下程式範例：

.. code-block:: python

    str1 = "I'm John. I'm 12 years old."

在 Python 中，字串其實為串列的一種，字串取值有兩種順序：

- 從左到右索引值默認為 0 開始的，最大範圍是字串長度減 1
- 從右到左索引值默認為 -1 開始的，最大範圍是字串開頭起始位置

例如以下程式範例：

.. code-block:: python

    s = 'Hello World!'
    print(s[0:5])

以上的輸出結果如下：

.. code-block:: console

    Hello

List 串列
-----------------------------------------

List (串列) 是 Python 中最常使用的數據類型之一，串列可以完成大多數的數據結構，串列為**有序的**數據類型，可以包含不同類型的數據內容，譬如字串、數字甚至是串列等等。

串列的宣告使用 ``[]``，如以下範例程式：

.. code-block:: python

    list1 = [1, "Hello World!", ["list2", -1]]

串列是透過 ``index (索引值)`` 來取得串列的內容，索引值的起始位置從左到右默認為 0 開始，從右到左索引值默認為 -1 開始。

.. code-block:: console

    list   ['a', 'b', 'c', 'd', 'e']
    index    0    1    2    3    4
            -5   -4   -3   -2   -1

串列的分割可以使用 ``變數名稱[起始位置:結束位置]``，即可截取相應的串列內容，如以下範例程式：

.. code-block:: python

    list1 = [1, "Hello World!", ["list2", -1], "I am last one"]
    print(list1) # 輸出完整串列
    print(list1[0]) # 輸出串列第一個元素
    print(list1[0:2]) # 從第一個開始輸出到第二個元素
    print(list1[-1]) # 輸出串列最後一個元素
    print(list1[3]) # 輸出串列第三個元素
    print(list1[3][0]) # 輸出串列第三個元素中的第一個元素

以上範例程式輸出結果如下：

.. code-block:: console

    [1, "Hello World!", ["list2", -1], "I am last one"]
    1
    [1, "Hello World!"]
    I am last one
    ["list2", -1]
    "list2"

Tuple 元組
-----------------------------------------

Tuple (元組) 與串列非常相似，不同之處在於元組的元素不能修改。元組的宣告方式為 ``小括號()`` ，元素之間用逗號隔開。

元組中的元素類型也可以不相同，如以下範例程式：

.. code-block:: python

    tuple1 = ('abcd', 786, 2.23, 'runoob', 70.2)
    print (tuple) #輸出完整元組
    print (tuple[0]) #輸出元組的第一個元素
    print (tuple[1:3]) #輸出從第二個元素開始到第三個元素
    print (tuple[2:]) #輸出從第三個元素開始的所有元素

以上範例程式輸出結果如下：

.. code-block:: console

    ('abcd', 786, 2.23, 'runoob', 70.2)
    abcd
    (786, 2.23)
    (2.23, 'runoob', 70.2)

雖然元組的元素不可改變，但它可以包含可變的對象，比如 ``list (串列)`` 。

構造包含 0 個或 1 個元素的元組比較特殊，所以有一些額外的語法規則：

.. code-block:: python

    tup1 = () # 空元組
    tup2 = (20,) # 一個元素，需要在元素後添加逗號

Dictionary 字典
-----------------------------------------

Dictionary (字典) 是除了串列以外 Python 之中最靈活的數據結構類型。列表是**有序的**數據類型，而字典是**無序的**數據集合。

字典與串列的區別在於：字典當中的元素是通過 ``Key (鍵)`` 來存取，而串列是透過 ``index (索引值)`` 來取值。

字典用 ``{}`` 宣告，由 ``Key (鍵)`` 和與 ``Key (鍵)`` 對應的 ``Value (值)`` 組成，此外在同一個字典中， ``Key (鍵)`` 必須是唯一的，如以下程式範例：

.. code-block:: python

    dict = {}
    dict['one'] = "This is one"
    dict[2] = "This is two" 
    dict2 = {'name':'john' , 'code':6734 , 'dept':'sales'}

    print(dict['one'])
    print(dict[2])
    print(dict2)

以上範例程式輸出結果如下：

.. code-block:: console

    This is one
    This is two
    {'dept': 'sales', 'code': 6734, 'name': 'john'}

在字典中，我們可以使用 ``keys()`` 取得字典裡所有的鍵值，以及 ``values()`` 取得字典裡所有的值。

.. code-block:: python

    dict2 = {'name':'john' , 'code':6734 , 'dept':'sales'}
    print(dict2.keys())
    print(dict2.values)

以上範例程式輸出結果如下：

.. code-block:: console

    ['dept', 'code', 'name']
    ['sales', 6734, 'john']

- 注意：字典的關鍵字必須為不可變類型，且不能重複。

Set 集合
-----------------------------------------

Set (集合) 為 Python 中一個無序且內容不重複的序列，主要功能是進行元素之間的關係測試和刪除重複元素。

可以使用大括號 ``{}`` 或者 ``set() `` 函數創建集合，如以下範例程式：

- 注意：創建一個空集合必須用 ``set()`` 而不是 ``{}`` ，因為 ``{}`` 是用來創建一個空字典。

.. code-block:: python

    set1 = {'Tom', 'Jim', 'Mary', 'Tom', 'Jack', 'Rose'}
    print(set1)

由於集合本身為不重複的元素序列，因此重複的元素會被自動去掉，以上範例程式輸出結果如下：

.. code-block:: console

    {'Mary', 'Jim', 'Rose', 'Jack', 'Tom'}

Python 數據類型轉換
-----------------------------------------

有時候，我們需要對數據的類型進行轉換，只需要將數據類型作為函數名即可進行轉換。

以下幾個內建的函數可以執行數據類型之間的轉換。這些函數將返回一個新的對象，表示轉換的值。

+--------------------+--------------------------------------------------------+
|函數                |描述                                                     |
+====================+========================================================+
|int(x [,base])      |將 ``x`` 轉換為一個整數                                  |
+--------------------+--------------------------------------------------------+
||float(x)           |將 ``x`` 轉換到一個浮點數                                |
+--------------------+--------------------------------------------------------+
|complex(real [,imag])|創建一個複數                                            |
+--------------------+--------------------------------------------------------+
|str(x)              |將對象 ``x`` 轉換為字符串                                |
+--------------------+--------------------------------------------------------+
|repr(x)             |將對象 ``x`` 轉換為表達式字符串                           |
+--------------------+--------------------------------------------------------+
|eval(str)           |用來計算在字符串中的有效 Python 表達式,並返回一個對象       |
+--------------------+--------------------------------------------------------+
|tuple(s)            |將序列 ``s`` 轉換為一個元組                               |
+--------------------+--------------------------------------------------------+
|list(s)             |將序列 ``s`` 轉換為一個列表                               |
+--------------------+--------------------------------------------------------+
|set(s)              |轉換為可變集合                                           |
+--------------------+--------------------------------------------------------+
|dict(d)             |創建一個字典。 ``d`` 必須是一個 ``(key, value)`` 元組序列。|
+--------------------+--------------------------------------------------------+
|frozenset(s)        |轉換為不可變集合                                         |
+--------------------+--------------------------------------------------------+
|chr(x)              |將一個整數轉換為一個字符                                  |
+--------------------+--------------------------------------------------------+
|ord(x)              |將一個字符轉換為它的整數值                                |
+--------------------+--------------------------------------------------------+
|hex(x)              |將一個整數轉換為一個十六進製字符串                         |
+--------------------+--------------------------------------------------------+
|oct(x)              |將一個整數轉換為一個八進製字符串                           |
+--------------------+--------------------------------------------------------+